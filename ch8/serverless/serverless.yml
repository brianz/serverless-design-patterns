service: gdax-lambda-arch

provider:
  name: aws
  runtime: python3.6
  stage: ${env:ENV}
  region: ${env:AWS_REGION}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
        - "s3:ListBucket"
        - "s3:PutObject"
      Resource:
        - "arn:aws:s3:::brianz-gdax-${env:ENV}-firehose"
        - "arn:aws:s3:::brianz-gdax-${env:ENV}-firehose/*"
        - "arn:aws:s3:::brianz-gdax-${env:ENV}-results"
        - "arn:aws:s3:::brianz-gdax-${env:ENV}-results/*"

package:
  exclude:
    - .git/**
    - __pycache__/**
    - "**/__pycache__/**"
    - "*.pyc"
    - "*.swp"


resources:
  Resources:
    GdaxFirehoseRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: gdax_${env:ENV}_firehose_delivery_role
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - firehose.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: ${env:ENV}_gdax_firehose_policy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - kinesis:DescribeStream
                    - kinesis:GetRecords
                    - kinesis:GetShardIterator
                    - logs:PutLogEvents
                    - s3:AbortMultipartUpload
                    - s3:GetBucketLocation
                    - s3:GetObject
                    - s3:ListBucket
                    - s3:ListBucketMultipartUploads
                    - s3:PutObject
                  Resource:
                    - "arn:aws:logs:${env:ENV}:*:log-group:/aws/kinesisfirehose/brianz-gdax-${env:ENV}-stream:log-stream:*"
                    - "arn:aws:s3:::brianz-gdax-${env:ENV}-firehose"
                    - "arn:aws:s3:::brianz-gdax-${env:ENV}-firehose/*"
    GdaxFirehoseStream:
      Type: AWS::KinesisFirehose::DeliveryStream
      Properties:
        DeliveryStreamName: brianz-gdax-${env:ENV}-stream
        DeliveryStreamType: DirectPut
        S3DestinationConfiguration:
          BucketARN: "arn:aws:s3:::brianz-gdax-${env:ENV}-firehose"
          BufferingHints:
            IntervalInSeconds: 60
            SizeInMBs: 5
          CompressionFormat: UNCOMPRESSED
          RoleARN:
            Fn::GetAtt:
              - GdaxFirehoseRole
              - Arn
    GdaxS3ResultsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: brianz-gdax-${env:ENV}-results

functions:
  hello:
    handler: handler.hello
    events:
      - s3:
          bucket: brianz-gdax-${env:ENV}-firehose
          event: s3:ObjectCreated:*
    environment:
      DESTINATION_BUCKET: brianz-gdax-${env:ENV}-results
